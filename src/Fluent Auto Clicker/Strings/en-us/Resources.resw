<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppDisplayName" xml:space="preserve">
    <value>Fluent Auto Clicker</value>
  </data>
  <data name="AppDescription" xml:space="preserve">
    <value>An beautifully designed open-source auto clicker for Windows 10 &amp; 11.</value>
  </data>
  <data name="Shell_Main.Content" xml:space="preserve">
    <value>Auto Clicker</value>
  </data>
  <data name="Settings_Personalization.Text" xml:space="preserve">
    <value>Personalization</value>
  </data>
  <data name="Settings_Theme.Text" xml:space="preserve">
    <value>App theme</value>
  </data>
  <data name="Settings_Theme_Light.Content" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="Settings_Theme_Dark.Content" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="Settings_Theme_Default.Content" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Settings_About.Text" xml:space="preserve">
    <value>About this application</value>
  </data>
  <data name="Settings_AboutDescription.Text" xml:space="preserve">
    <value>An beautifully designed open-source auto clicker for Windows 10 &amp; 11.</value>
  </data>
  <data name="SettingsPage_GitHubRepositoryLink.NavigateUri" xml:space="preserve">
    <value>https://github.com/RyanLua/Fluent-Auto-Clicker</value>
  </data>
  <data name="AppNotificationSamplePayload" xml:space="preserve">
    <value>&lt;toast launch="action=ToastClick"&gt;
  &lt;visual&gt;
    &lt;binding template="ToastGeneric"&gt;
      &lt;text&gt;Fluent Auto Clicker has started. (Developer)&lt;/text&gt;
      &lt;text&gt;&lt;/text&gt;
      &lt;image placement="appLogoOverride" hint-crop="circle" src="{0}Assets/WindowIcon.ico"/&gt;
    &lt;/binding&gt;
  &lt;/visual&gt;
  &lt;actions&gt;
    &lt;action content="Settings" arguments="action=Settings"/&gt;
  &lt;/actions&gt;
&lt;/toast&gt;</value>
  </data>
  <data name="Main_Interval.Text" xml:space="preserve">
    <value>Click interval:</value>
    <comment>Asks the user for how long between each click.</comment>
  </data>
  <data name="SettingsPage_GitHubRepositoryLink.Content" xml:space="preserve">
    <value>Source code</value>
  </data>
  <data name="Main_ButtonType.Header" xml:space="preserve">
    <value>Mouse button:</value>
    <comment>Asks the user for whether to click using left, middle, and right mouse buttons.</comment>
  </data>
  <data name="Main_ClickType.Header" xml:space="preserve">
    <value>Click type:</value>
    <comment>Asks the user for whether to click once or twice.</comment>
  </data>
  <data name="Main_RepeatType.Header" xml:space="preserve">
    <value>Click repeat:</value>
    <comment>Asks the user for how long they want the autoclickers to repeat for.</comment>
  </data>
  <data name="SettingsPage_GitHubIssueLink.Content" xml:space="preserve">
    <value>Submit feedback and report bugs</value>
  </data>
  <data name="SettingsPage_GitHubIssueLink.NavigateUri" xml:space="preserve">
    <value>https://github.com/RyanLua/Fluent-Auto-Clicker/issues/new</value>
  </data>
  <data name="SettingsPage_ReviewLink.Content" xml:space="preserve">
    <value>Rate and review us</value>
  </data>
  <data name="SettingsPage_ReviewLink.NavigateUri" xml:space="preserve">
    <value>ms-windows-store://review</value>
  </data>
  <data name="Main_ButtonType_Left.Content" xml:space="preserve">
    <value>Left</value>
  </data>
  <data name="Main_ButtonType_Middle.Content" xml:space="preserve">
    <value>Middle</value>
  </data>
  <data name="Main_ButtonType_Right.Content" xml:space="preserve">
    <value>Right</value>
  </data>
  <data name="Main_ClickType_Double.Content" xml:space="preserve">
    <value>Double</value>
  </data>
  <data name="Main_ClickType_Single.Content" xml:space="preserve">
    <value>Single</value>
  </data>
  <data name="Main_Interval_Hours.Description" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="Main_Interval_Milliseconds.Description" xml:space="preserve">
    <value>Milliseconds</value>
  </data>
  <data name="Main_Interval_Minutes.Description" xml:space="preserve">
    <value>Minutes</value>
  </data>
  <data name="Main_Interval_Seconds.Description" xml:space="preserve">
    <value>Seconds</value>
  </data>
  <data name="Main_RepeatType_Clicks.Description" xml:space="preserve">
    <value>clicks</value>
  </data>
  <data name="Main_RepeatType_InfiniteClicks.Content" xml:space="preserve">
    <value>∞ clicks (forever)</value>
  </data>
  <data name="Main_StartClicker.Content" xml:space="preserve">
    <value>Start Auto Clicker</value>
  </data>
  <data name="Settings_Behavior.Text" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="Settings_Window_AlwaysOnTop.Content" xml:space="preserve">
    <value>Always on top</value>
  </data>
  <data name="Settings_Window_HideWhenMinimized.Content" xml:space="preserve">
    <value>Hide when minimized</value>
  </data>
  <data name="Settings_Window.Text" xml:space="preserve">
    <value>Window management</value>
  </data>
  <data name="Settings_WindowManagement_WindowBehavior.Text" xml:space="preserve">
    <value>Window behavior</value>
  </data>
</root>